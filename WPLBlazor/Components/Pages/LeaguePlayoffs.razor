@page "/playoffs"
@attribute [StreamRendering]
@using Schedules = WPLBlazor.Models.Schedules

<PageTitle>Playoffs Schedule</PageTitle>

<Card Padding="Padding.Is2">
    <CardBody>
        <CardTitle Size="3">Playoff Schedule</CardTitle>
        <Divider />
        <CardText>
            @foreach (var day in schedules.DistinctBy(x => x.Date).Where(x => x.Playoffs == true))
            {
                <Card Padding="Padding.Is2">
                    <CardBody>
                        <CardTitle>

                        </CardTitle>
                        <CardText>
                            <center><h3>@day.Date.ToLongDateString()</h3></center>
                            <center><h4>Week: @day.Week_Id_Playoff</h4></center>
                            <Table Striped Bordered Responsive>
                                <TableHeader ThemeContrast="ThemeContrast.Dark">
                                    <TableRow>
                                        <TableHeaderCell><center>Home Team</center></TableHeaderCell>
                                        <TableHeaderCell></TableHeaderCell>
                                        <TableHeaderCell><center>Away Team</center></TableHeaderCell>
                                        <TableHeaderCell><center>Table #</center></TableHeaderCell>
                                    </TableRow>
                                </TableHeader>
                                @foreach (var d in schedules.Where(x => x.Playoffs == true))
                                {
                                    <TableBody>
                                        @if (teams != null)
                                        {
                                            <TableRow>
                                                <TableRowCell><center>@teams.Where(x => x.Id == d.Home_Team).First().TeamName</center></TableRowCell>
                                                <TableRowCell><center>vs</center></TableRowCell>
                                                <TableRowCell><center>@teams.Where(x => x.Id == d.Away_Team).First().TeamName</center></TableRowCell>
                                                <TableRowCell><center>@d.Table_Number</center></TableRowCell>
                                            </TableRow>
                                        }
                                    </TableBody>
                                }
                            </Table>
                        </CardText>
                    </CardBody>
                </Card>
            }
        </CardText>
    </CardBody>
</Card>

@code {
    [CascadingParameter]
    private LoadingIndicator loadingIndicator { get; set; } = new();

    private APIService aPIService = new();
    private RosterHelper RosterHelper = new();
    private TeamHelper teamHelper = new();
    private WeekHelper weekHelper = new();
    private List<Schedules> schedules = [];
    private List<TeamDetails> teams = [];
    private List<TeamStats> teamStats = [];
    private List<WeekFullInfo> weeks = [];
    private WeekFullInfo? homeWeek = new();

    protected override async Task OnInitializedAsync()
    {
        await loadingIndicator.Show();
        teams = await aPIService.GetTeamDetails();
        schedules = await RosterHelper.GetSchedules();
        teamStats = await teamHelper.GetAllTeamStats();
        weeks = await weekHelper.GetFullWeek();
        await loadingIndicator.Hide();

    }
}
