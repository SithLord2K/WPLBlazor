@page "/player_standings"
@attribute [StreamRendering]

<PageTitle>Player Standings</PageTitle>

@if (pData != null)
{
    <Card Padding="Padding.Is2">
        <CardBody>
            <CardTitle Size="3">Player Standings</CardTitle>
            <Divider />
            <CardText>
                <DataGrid TItem="PDataModel"
                          @ref="playerGrid"
                          Data="@pData"
                          PageSize="10"
                          SortMode="DataGridSortMode.Single"
                          Striped="true"
                          Sortable="true"
                          Bordered="true"
                          ShowPager="true"
                          Responsive="true"
                          ResponsiveMode="@TableResponsiveMode.Mobile">
                    <ChildContent>
                        <DataGridCommandColumn TItem="PDataModel"></DataGridCommandColumn>
                        <DataGridColumn TItem="PDataModel" Field="TeamName" Caption="Team" Sortable="true" Filterable FilterMethod="DataGridColumnFilterMethod.Equals" FixedPosition="TableColumnFixedPosition.Start" />
                        <DataGridColumn TItem="PDataModel" Field="FirstName" Caption="First Name" Sortable="true" />
                        <DataGridColumn TItem="PDataModel" Field="LastName" Caption="Last Name" Sortable="true" />
                        <DataGridColumn TItem="PDataModel" Field="GamesPlayed" Caption="Games Played" Sortable="true" Filterable FilterMethod="DataGridColumnFilterMethod.Equals" />
                        <DataGridColumn TItem="PDataModel" Field="GamesWon" Caption="Games Won" Sortable="true" />
                        <DataGridColumn TItem="PDataModel" Field="GamesLost" Caption="Games Lost" Sortable="true" />
                        <DataGridColumn TItem="PDataModel" Field="Average" DisplayFormat="{0:P2}" Caption="Average" Sortable="true" />
                    </ChildContent>
                    <EmptyTemplate>
                        <div class="box">
                            No Player Stats Found!
                        </div>
                    </EmptyTemplate>
                </DataGrid>
            </CardText>
        </CardBody>
    </Card>
   }         

    @code {
    [CascadingParameter]
    LoadingIndicator loadingIndicator { get; set; } = new();

    private APIService aPIService = new();
    private TeamHelper teamHelper = new();
    private PlayerHelpers playerHelper = new();
    private PDataService pDataService = new();

    private List<TeamStats> teamStats = new();
    private List<TeamDetails> teamDetails = [];
    private List<Players>? playerData = [];
    private List<PDataModel> pData = [];
    private PDataModel pDataModel = new();
    private DataGrid<PDataModel> playerGrid = new();
    private DataGrid<TeamStats> teamGrid = new();

    protected override async Task OnInitializedAsync()
    {
        await loadingIndicator.Show();
        teamDetails = await playerHelper.GetTeamDetails();
        playerData = await playerHelper.ConsolidatePlayer();
        teamStats = await teamHelper.GetAllTeamStats();
        pData = await pDataService.GetFullPlayerData();

        await playerGrid.ApplySorting(new DataGridSortColumnInfo(nameof(PDataModel.Average), SortDirection.Descending));
        await base.OnInitializedAsync();
        await loadingIndicator.Hide();
    }
}
